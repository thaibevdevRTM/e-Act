@model eForms.Models.Reports.RepPostEvaModels
@using Microsoft.AspNetCore.Html

@{
    Layout = "~/Views/Shared/_BlankLayout.cshtml";
}

<!-- Font Awesome -->
<link href="~/Content/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
<!-- NProgress -->
<link href="~/Content/vendors/nprogress/nprogress.css" rel="stylesheet">
<style>
    table.fixed {
        table-layout: fixed;
        width: 100%;
    }

        table.fixed td {
            overflow: hidden;
        }
</style>


<div class="modal-dialog modal-large">
    <!-- Modal content-->
    <div class="modal-content">


        <div id="divPDF" class="tabcontent">
            <div class="modal-body">
                <div id="GridPDF" class="row" style="background-color:white;">

                    @Html.Action("activityPDFView", "ActivityViewer", new { actId = @ViewBag.actId })
                    @RenderPage("~/Views/Shared/chartHorizontalBar.cshtml")
                    @RenderPage("~/Views/actFormRepPostEva/sharePostEvaViewList.cshtml")

                </div>
            </div>
        </div>
    </div>
  
</div>


<!-- Chart.js -->
<script src="~/Content/vendors/Chart.js/dist/Chart.min.js"></script>

<script src="~/Content/vendors/echarts/dist/echarts.min.js"></script>


<script>

    $(document).ready(function () {

        init_flot_chart();

    });


     function init_flot_chart() {

        $.ajax({
            type: "POST",
            url: '@Url.Action("postEvaGroupBrandData", "actFormRepPostEva")',
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                genMonthlyCompareSEActual(response);
                genMonthlyCompareActualExpend(response);
            },
        });
    }

    function genMonthlyCompareActualExpend(jsondata) {
        var labels = [];

            var ctxC = document.getElementById("chartActual");
        var mybarChart = new Chart(ctxC, {
            type: 'horizontalBar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: '# Net Sales',
                        backgroundColor: "#289CE3",
                        data: []
                    }, {
                        label: '# SE(AP+SD)',
                        backgroundColor: "#ECCB34",
                        data: []
                    }]
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });


        jsondata.forEach(function (e) {
            labels.push([e.name]);
            mybarChart.data.datasets[0].data.push(e.tempAPNormalCost);
            mybarChart.data.datasets[1].data.push(e.saleActual);
        })

        mybarChart.update();
    }


    function genMonthlyCompareSEActual(jsondata) {
        var labels = [];

            var ctxC = document.getElementById("chartCompareSE");
            var mybarChart = new Chart(ctxC, {
                type: 'horizontalBar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '# งบจัด',
                            backgroundColor: "#50EB88",
                            data: []
                        }, {
                            label: '# งบจ่าย',
                            backgroundColor: "#ECCB34",
                            data: []
                        }]
                },
                options: {
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });


        jsondata.forEach(function (e) {
            console.log(e);
            labels.push([e.name]);
            mybarChart.data.datasets[0].data.push(e.estimateSaleBathAll);
            mybarChart.data.datasets[1].data.push(e.saleActual);
        })

        mybarChart.update();
    }



    var theme = {
        color: [
            '#26B99A', '#34495E', '#BDC3C7', '#3498DB',
            '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
        ],

        title: {
            itemGap: 8,
            textStyle: {
                fontWeight: 'normal',
                color: '#408829'
            }
        },

        dataRange: {
            color: ['#1f610a', '#97b58d']
        },

        toolbox: {
            color: ['#408829', '#408829', '#408829', '#408829']
        },

        tooltip: {
            backgroundColor: 'rgba(0,0,0,0.5)',
            axisPointer: {
                type: 'line',
                lineStyle: {
                    color: '#408829',
                    type: 'dashed'
                },
                crossStyle: {
                    color: '#408829'
                },
                shadowStyle: {
                    color: 'rgba(200,200,200,0.3)'
                }
            }
        },

        dataZoom: {
            dataBackgroundColor: '#eee',
            fillerColor: 'rgba(64,136,41,0.2)',
            handleColor: '#408829'
        },
        grid: {
            borderWidth: 0
        },

        categoryAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },

        valueAxis: {
            axisLine: {
                lineStyle: {
                    color: '#408829'
                }
            },
            splitArea: {
                show: true,
                areaStyle: {
                    color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                }
            },
            splitLine: {
                lineStyle: {
                    color: ['#eee']
                }
            }
        },
        timeline: {
            lineStyle: {
                color: '#408829'
            },
            controlStyle: {
                normal: { color: '#408829' },
                emphasis: { color: '#408829' }
            }
        },

        k: {
            itemStyle: {
                normal: {
                    color: '#68a54a',
                    color0: '#a9cba2',
                    lineStyle: {
                        width: 1,
                        color: '#408829',
                        color0: '#86b379'
                    }
                }
            }
        },
        map: {
            itemStyle: {
                normal: {
                    areaStyle: {
                        color: '#ddd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                },
                emphasis: {
                    areaStyle: {
                        color: '#99d2dd'
                    },
                    label: {
                        textStyle: {
                            color: '#c12e34'
                        }
                    }
                }
            }
        },
        force: {
            itemStyle: {
                normal: {
                    linkStyle: {
                        strokeColor: '#408829'
                    }
                }
            }
        },
        chord: {
            padding: 4,
            itemStyle: {
                normal: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                },
                emphasis: {
                    lineStyle: {
                        width: 1,
                        color: 'rgba(128, 128, 128, 0.5)'
                    },
                    chordStyle: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        }
                    }
                }
            }
        },
        gauge: {
            startAngle: 225,
            endAngle: -45,
            axisLine: {
                show: true,
                lineStyle: {
                    color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                    width: 8
                }
            },
            axisTick: {
                splitNumber: 10,
                length: 12,
                lineStyle: {
                    color: 'auto'
                }
            },
            axisLabel: {
                textStyle: {
                    color: 'auto'
                }
            },
            splitLine: {
                length: 18,
                lineStyle: {
                    color: 'auto'
                }
            },
            pointer: {
                length: '50%',
                color: 'auto'
            },
            title: {
                textStyle: {
                    color: '#333'
                }
            },
            detail: {
                textStyle: {
                    color: 'auto'
                }
            }
        },
        textStyle: {
            fontFamily: 'Arial, Verdana, sans-serif'
        }
    };

    if ($('#echartGroupBrandAndSpending').length) {

        var echartPieCollapse = echarts.init(document.getElementById('echartGroupBrandAndSpending'), theme);

        echartPieCollapse.setOption({
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {
                x: 'center',
                y: 'bottom',
                data: labels
            },
            toolbox: {
                show: true,
                feature: {
                    magicType: {
                        show: true,
                        type: ['pie', 'funnel']
                    },
                    restore: {
                        show: true,
                        title: "Restore"
                    },
                    saveAsImage: {
                        show: true,
                        title: "Save Image"
                    }
                }
            },
            calculable: true,
            series: [{
                name: 'Area Mode',
                type: 'pie',
                radius: [25, 90],
                center: ['50%', 170],
                roseType: 'area',
                x: '50%',
                max: 40,
                sort: 'ascending',
                data: jsondata
                //data: [{
                //    value: 10,
                //    name: 'rose1'
                //}, {
                //    value: 5,
                //    name: 'rose2'
                //}, {
                //    value: 15,
                //    name: 'rose3'
                //}, {
                //    value: 25,
                //    name: 'rose4'
                //}, {
                //    value: 20,
                //    name: 'rose5'
                //}, {
                //    value: 35,
                //    name: 'rose6'
                //}]
            }]
        });

    }

</script>
