@model eForms.Models.Reports.RepPostEvaModels
@using Microsoft.AspNetCore.Html

<!-- Font Awesome -->
<link href="~/Content/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
<!-- NProgress -->
<link href="~/Content/vendors/nprogress/nprogress.css" rel="stylesheet">


<div class="row">



    <div class="col-lg-6">
        <div class="x_panel">
            <div class="x_title">

                <h2 id="chart_header01">Activity Summary</h2>

                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content" style="height:280px;">

                @*<canvas id="chartGroupSumSaleIn"></canvas>*@

                <canvas id="chartBudgetActive"></canvas>

            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <div class="x_panel">
            <div class="x_title">
                <h2 id="chart_header02">Group Brand and Sum Spending Exp. (MB)</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content" style="height:280px;">

                <canvas id="echartGroupBrandAndSpending"></canvas>
            </div>
        </div>
    </div>


</div>

@RenderPage("~/Views/actFormRepPostEva/sharePostEvaViewCompareChart.cshtml")



<div class="row">
    <div class="col-md-8 hidden">
        <div class="x_panel">
            <div class="x_title">
                <h2>Compare estimate(case) and sales-in(case)</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="chart-container">
                <div class="row" style="width:100%;">
                    <canvas id="chartCompare" class="chartjs-render-monitor"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="~/Content/vendors/Chart.js/dist/Chart.min.js"></script>

<script src="~/Content/vendors/echarts/dist/echarts.min.js"></script>

<script>

    $(document).ready(function () {

        init_flot_chart();
        budget_activity_status_chart();

    });

    function budget_activity_status_chart() {
            $.ajax({
            type: "POST",
            url: '@Url.Action("postEvaGroupBudgetStatusData", "actFormRepPostEva")',
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                genChart_Budget_Activity_Status(response);
            },
        });
    }

    function init_flot_chart() {

        $.ajax({
            type: "POST",
            url: '@Url.Action("postEvaGroupBrandData", "actFormRepPostEva")',
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                genChart_Sum_Spending(response);
                genChart_Compare_AccrualVsActual(response);
                genChart_Compare_NetSaleVsSE(response);
            },
        });
    }


    function genChart_Compare_NetSaleVsSE(jsondata) {
        var labels = [];
        if ($('#chartCompare').length) {
            var ctxC = document.getElementById("chartActual");
            var mybarChart = new Chart(ctxC, {
                type: 'horizontalBar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '# Net Sales',
                            backgroundColor: "#289CE3",
                            data: []
                        }, {
                            label: '# SE(AP+SD)',
                            backgroundColor: "#ECCB34",
                            data: []
                        }]
                },
                options: {
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }

        jsondata.forEach(function (e) {
            labels.push([e.name]);
            mybarChart.data.datasets[0].data.push(e.actAmount);
            mybarChart.data.datasets[1].data.push(e.saleActual);
        })

        mybarChart.update();
    }

    function genChart_Compare_AccrualVsActual(jsondata) {
        var labels = [];
        if ($('#chartCompare').length) {
            var ctxC = document.getElementById("chartCompareSE");
            var mybarChart = new Chart(ctxC, {
                type: 'horizontalBar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '# งบจัด',
                            backgroundColor: "#50EB88",
                            data: []
                        }, {
                            label: '# งบจ่าย',
                            backgroundColor: "#ECCB34",
                            data: []
                        }]
                },
                options: {
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }

        jsondata.forEach(function (e) {
            labels.push([e.name]);
            mybarChart.data.datasets[0].data.push(e.total);
            mybarChart.data.datasets[1].data.push(e.saleActual);
        })

        mybarChart.update();
    }

    function genChart_Sum_Spending(jsondata) {
        var chart_plot_02_data = [];
        var chart_Spending_data = [];
        var labels = [];

        if ($('#chartCompare').length) {
            var ctxC = document.getElementById("chartCompare");
            var mybarChart = new Chart(ctxC, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            type: 'line',
                            label: '# of Sales In(case)',
                            backgroundColor: "rgba(255, 0, 0, 0.2)",
                            borderColor: "rgba(255, 0, 0, 0.4)",
                            pointBorderColor: "rgba(255, 0, 0, 0.8)",
                            pointBorderColor: "rgba(255, 0, 0, 0.8)",
                            pointHoverBackgroundColor: "#fff",
                            pointHoverBorderColor: "rgba(220,220,220,1)",
                            pointBorderWidth: 1,
                            data: []
                        },
                        {
                            label: '# of Normal(case)',
                            backgroundColor: "#26B99A",
                            data: []
                        }, {
                            label: '# of Promotion(case)',
                            backgroundColor: "#03586A",
                            data: []
                        }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                max: 1000000,
                                stepSize: 50000
                            }
                        }],
                        scaleLabel: {
                            display: true,
                            labelString: 'ล้านบาท',
                            fontSize: 10,
                        }
                    }
                }
            });
        }

        jsondata.forEach(function (e) {
            labels.push([e.name]);
            chart_plot_02_data.push([e.sumActSalesParti]);
            chart_Spending_data.push([e.value]);
            mybarChart.data.datasets[0].data.push(e.sumSalesInCase);
            mybarChart.data.datasets[1].data.push(e.sumNormalCase);
            mybarChart.data.datasets[2].data.push(e.sumPromotionCase);
        })

        mybarChart.update();


        var ctx = document.getElementById('echartGroupBrandAndSpending').getContext('2d');
        var chart2 = new Chart(ctx, {
            // The type of chart we want to create
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Montly Summary',
                    backgroundColor: [
                        "#455C73",
                        "#9B59B6",
                        "#BDC3C7",
                        "#26B99A",
                        "#3498DB",
                        "#3949AB",
                        "#006064",
                        "#827717",
                        "#FF6F00"
                    ],
                    //borderColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                    pointBackgroundColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                    data: chart_Spending_data,
                }]
            },

            // Configuration options go here
            otpions: {
                legend: false,
            }

        });

    }

    function genChart_Budget_Activity_Status(jsondata) {

        var chart_BudgetStatus_data = [];
        var labels_chart_BudgetStatus = [];
        var countBudgetActive = 0;
        var countBudgetInactive = 0;
        var chart_color = ["#f79707","#2f8520","#006064","#827717","#BDC3C7"];

        jsondata.forEach(function (e) {
            countBudgetActive = e.countBudgetActive;
            countBudgetInactive = e.countBudgetInactive;
        })

        labels_chart_BudgetStatus.push('อยู่ระหว่างทำกิจกรรม');
        labels_chart_BudgetStatus.push('กิจกรรมที่เสร็จสิ้น');

        if (countBudgetActive == "0" && countBudgetInactive == "0") {
            document.getElementById("chart_header01").innerHTML = "ไม่พบกิจกรรมตามเงื่อนไขที่กำหนด";
            document.getElementById("chart_header02").innerHTML = "ไม่พบกิจกรรมตามเงื่อนไขที่กำหนด";
        }

        chart_BudgetStatus_data.push(countBudgetActive);
        chart_BudgetStatus_data.push(countBudgetInactive);
               

        //----------------------------------------------------------------

        var canvas = document.getElementById("chartBudgetActive");
        var ctx = canvas.getContext('2d');

        //Global Options:
        //Chart.defaults.global.defaultFontColor = 'black';
        //Chart.defaults.global.defaultFontSize = 14;

        var data = {
            labels: labels_chart_BudgetStatus,
            datasets: [
                {
                    fill: true,
                    data: chart_BudgetStatus_data,
                    backgroundColor: chart_color,
                    pointBorderColor: "#fff",
                    pointBackgroundColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                }
            ]
        };

        // Notice the rotation from the documentation.

        var options = {
            title: {
                display: true,
                text: 'Activity total ' + (countBudgetInactive + countBudgetActive) + ' (Active ' + countBudgetActive + ' InActive ' + countBudgetInactive + ')',
                fontSize: 16,
                position: 'top'
            },
            rotation: -0.7 * Math.PI
        };


        // Chart declaration:
        var myBarChart = new Chart(ctx, {
            type: 'pie',
            data: data,
            options: options
        });

    }

</script>

