@model eActForm.Models.Activity_TBMMKT_Model
@using eActForm.BusinessLayer
@using eActForm.Models
@using System.Configuration;
<div class="col-md-12 col-xs-12">
    <fieldset>
        <legend> ค่าใช้จ่ายในการเดินทาง / Travel & Transportation Expenses</legend>
    </fieldset>
</div>

<div class="col-md-12">
    <table class="table table-bordered" id="tbl_CashDetail" cellpadding="0" cellspacing="0">
        <thead class="thead-dark">
            <tr>
                <th class="align-content-center font10" rowspan="2" style="width:5%;"></th>
                <th class="align-content-center font10" rowspan="2" style="width:10%;">วันที่</th>
                <th class="align-content-center font10" rowspan="2" style="width:30%;">รายการ</th>
                <th class="align-content-center font10" rowspan="2" style="width:15%;">ลิตร</th>
                <th class="align-content-center font10" rowspan="2" style="width:15%;">จำนวนเงิน</th>
                <th class="align-content-center font10" rowspan="2" style="width:30%;">หมายเหตุ</th>
            </tr>
        </thead>

        @for (int i = 0; i < Model.activityOfEstimateList.Count; i++)
        {
            <tbody id=first>
                <tr class="tagCountRowTravel">
                    <td>
                        <button type="button" class="btn ink-reaction btn-danger fa fa-trash-o" onclick="cashDelete(this);"></button>
                        @Html.HiddenFor(x => x.activityOfEstimateList[i].activityTypeId, new { Value = "1", @class = "hindenTypeId" })
                    </td>
                    <td style="text-align:right">
                        @Html.TextBox("activityOfEstimateList[" + i + "].dateInput", DocumentsAppCode.convertDateTHToShowCultureDateEN(Model.activityOfEstimateList[i].date, ConfigurationManager.AppSettings["formatDateUse"]),
                      new { @class = "form-control textboxcss font10 textRight datepicker", autocomplete = "off" })
                    </td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList[i].productDetail, new { @class = "form-control textboxcss font10 textRight expenseList", onkeyup = "autocompleDetail(this)" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList[i].compensate, "{0:0.000}",new { @class = "form-control textboxcss font10 textRight" ,@type = "number", onkeyup = "getLite()" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList[i].total, "{0:0.00}", new { @class = "form-control textboxcss font10 textRight", onkeyup = "getValues()" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList[i].remark, new { @class = "form-control textboxcss font10 textRight" })</td>

                </tr>
            </tbody>
        }
        <tr>
            <td></td>
            <td colspan="2" class="textRight">
                รวมค่าใช้จ่ายในการเดินทาง/ค่าใช้จ่ายประจำเดือน (ไม่รวมค่าเลี้ยงรับรองหรือการตรวจตลาด)
                Total Travel & Transporation Expenses (Excluding Entertainment Expenses and Market Visit)
            </td>
            <td class="textRight">
                <label id="lblLite"></label>
            </td>
            <td class="textRight">
                <label id="lblShowtotal"></label>
            </td>
            <td></td>
        </tr>



    </table>
    <div id="addEx" class="row pull-right" style="width:150px" onclick="addRow();">
        <label class="btn ink-reaction btn-success fa fa-plus" style="width:120px; height:30px;">Add</label>
    </div>
    @if (UtilsAppCode.Session.User.isCreator && Model.activityFormModel.mode == AppCode.Mode.addNew.ToString())
    {
        <div id="divCashBill" class="row">

            @foreach (var item in Model.exPerryCashList)
            {
                <div class="col-lg-8">
                </div>
                <div class="col-lg-4">
                    <label style="color:red">
                        <label style="color:red"> @item.cashName @item.cash บาท/เดือน</label>
                    </label>
                </div>
            }

        </div>
    }
    else
    {
        <div id="divCashBill" class="row"></div>
    }
</div>
<div class="col-lg-12 col-xs-12">
    <fieldset>
        <legend>  ค่าใช้จ่ายในการเลี้ยงรับรอง หรือการตรวจตลาด /  Entertainment Expenses and Market Visit</legend>
    </fieldset>
    <div>
        <lable style="color:red"> * หมายเหตุ:</lable>
        <lable>ค่าใช้จ่ายส่วนนี้ จะต้องผ่านการอนุมัติตามอำนาจการอนุมัติได้เท่านั้น *</lable>
    </div>
</div>

<div class="col-md-12">
    <table class="table table-bordered" id="tbl_Entertainment" cellpadding="0" cellspacing="0">
        <thead class="thead-dark">
            <tr>
                <th class="align-content-center font10" rowspan="2" style="width:5%;"></th>
                <th class="align-content-center font10" rowspan="2" style="width:10%;">วันที่</th>
                <th class="align-content-center font10" rowspan="2" style="width:15%;">สถานที่</th>
                <th class="align-content-center font10" rowspan="2" style="width:25%;">จุดประสงค์</th>
                <th class="align-content-center font10" rowspan="2" style="width:25%;">ชื่อลูกค้า</th>
                <th class="align-content-center font10" rowspan="2" style="width:10%;">รวมเป็นจำนวนเงิน</th>
            </tr>
        </thead>

        @for (int i = 0; i < Model.activityOfEstimateList2.Count; i++)
        {
            <tbody id="first1">
                <tr class="tagCountRowExpenses">
                    <td>
                        <button type="button" class="btn ink-reaction btn-danger fa fa-trash-o" onclick="cashDelete(this);"></button>
                        @Html.HiddenFor(x => x.activityOfEstimateList2[i].activityTypeId, new { Value = "2", @class = "hindenTypeId2" })
                    </td>
                    <td style="text-align:right">
                        @Html.TextBox("activityOfEstimateList2[" + i + "].dateInput", DocumentsAppCode.convertDateTHToShowCultureDateEN(Model.activityOfEstimateList2[i].date, ConfigurationManager.AppSettings["formatDateUse"]),
                 new { @class = "form-control textboxcss font10 textRight datepicker", autocomplete = "off" })
                    </td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList2[i].productDetail, new { @class = "form-control textboxcss font10 textRight" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList2[i].detail, new { @class = "form-control textboxcss font10 textRight" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList2[i].remark, new { @class = "form-control textboxcss font10 textRight" })</td>
                    <td style="text-align:right"> @Html.TextBoxFor(x => x.activityOfEstimateList2[i].total, "{0:0.00}", new { @class = "form-control textboxcss font10 textRight", onkeyup = "getTotal()" })</td>

                </tr>
            </tbody>
        }
        <tr>
            <td></td>
            <td colspan="4" class="textRight">
                รวมค่าใช้จ่ายในการเลี้ยงรับรองและ/หรือการตรวจตลาด
                Total Entertainment Expenses and Market Visit
            </td>
            <td class="textRight">
                <label id="lbltotalExMaket"></label>
            </td>
        </tr>
        <tr>
            <td></td>
            <td colspan="4" class="textRight">
                รวมค่าใช้จ่ายประจำเดือนทั้งหมด เป็นจำนวนเงิน (บาท)
                Total Monthly Expenses (Baht)
            </td>
            <td class="textRight">
                <label id="lbltotalExpenses"></label>
            </td>
        </tr>
        <tr>
            <td></td>
            <td colspan="4" class="textRight">
                กรณีมีการเบิกเงินค่าใช้จ่ายล่วงหน้า จำนวนที่ขอเบิกไป  (บาท) /  Cash Advance (Baht)
            </td>
            <td class="textRight">
                <label id="lbltotalAdvance">
                    @{
                        string result = String.Format("{0:n2}", @Model.totalCostThisActivity);
                        @result.ToString();
                        @Html.HiddenFor(x => x.activityFormTBMMKT.benefit)
                    }
                </label>
            </td>
        </tr>
        <tr>
            <td></td>
            <td colspan="4" class="textRight">
                รวมค่าใช้จ่ายที่ต้องการเบิก(คืน)ในครั้งนี้ /  Total All Expenses
            </td>
            <td class="textRight">
                <label id="lbltotalAll"></label>
            </td>
        </tr>
    </table>


    <div id="addEnt" class="row pull-right" style="width:150px" onclick="addRowEntertainment();">
        <label class="btn ink-reaction btn-success fa fa-plus" style="width:120px; height:30px;">Add</label>
    </div>

</div>


<script type="text/javascript">
    $(document).ready(function () {
        getTotal();
        getLite();
        getValues();
        document.getElementById("divCashBill").style.display = "none";
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy'
        });
    });


    if (@Model.activityFormTBMMKT.statusId != "1" || @Model.activityFormTBMMKT.statusId == "5" || '@Model.activityFormTBMMKT.createdByUserId' != '@UtilsAppCode.Session.User.empId') {
        document.getElementById("addEnt").style.display = "none";
        document.getElementById("addEx").style.display = "none";
    }
    function autocompleDetail(i) {
        console.log(i.id);
        $("#"+i.id).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("getOtherMasterByType", "eAct")',
                    type: "POST",
                    dataType: "json",
                    data: {
                        type: 'expenseCash',
                        subType: '',
                        text: $("#"+i.id).val(),
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.displayVal, value: item.displayVal, id: item.id };
                        }))

                    }
                })
            },
            minLength: 0,
            messages: {
                noResults: '',
                results: function (resultsCount) {
                }
            }, select: function (event, ui) {
                $("#"+i.id).val(ui.item.id)
            }
        }).focus(function () {
            $(this).data("uiAutocomplete").search($(this).val());
        });

    }

    function addRow() {
        var RowCount = $('#tbl_CashDetail tbody tr').length - 1;
        var newRow = $("#tbl_CashDetail tbody tr").first().clone().find("input").val("").end();
        $("#tbl_CashDetail > tbody:first").append(newRow);
        newRow.find("input").each(function () {
            $(this).attr("id", $(this).attr("name").replace("[0].", "_" + RowCount + "__"));
            $(this).attr("name", $(this).attr("name").replace("[0]", "[" + RowCount + "]"));

            var elms = document.getElementsByClassName('hindenTypeId')
            for (var i = 0; i < elms.length; i++) {
                    elms[i].setAttribute("value", "1");
            }
        }
        );
        newRow.insertBefore('#tbl_CashDetail tbody>tr:last');

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy'
        });

    }

    function cashDelete(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
        getValues();
    }


    function getValues() {
        var totalAll = 0.00;
        var rowCount = parseInt($('#tbl_CashDetail tr.tagCountRowTravel').length);

        for (i = 0; i < rowCount; i++) {
            var x = document.getElementsByName("activityOfEstimateList[" + i + "].total");
            var rowtotal = parseFloat($(x).val());
            if (isNaN(rowtotal)) rowtotal = 0;
            totalAll = totalAll + rowtotal;
        }
        //convertBaht2Text(totalAll);
        document.getElementById('lblShowtotal').innerHTML = totalAll.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        totalExpenExMaket();
        totalAllExpenses();
    }

    function totalExpenExMaket() {
        var total = document.getElementById('lblShowtotal').innerHTML.split(",").join("");
        var ExMaket = document.getElementById('lbltotalExMaket').innerHTML.split(",").join("");
        total = isNaN(total) ? 0 : parseFloat(total);
        ExMaket = isNaN(ExMaket) ? 0 : parseFloat(ExMaket);
        var result = total + ExMaket;
        document.getElementById('lbltotalExpenses').innerHTML = isNaN(result) ? 0 : result.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');

    }

    function totalAllExpenses() {
        var ex = parseFloat(document.getElementById('lbltotalExpenses').innerHTML.split(",").join(""));
        var adv = parseFloat(document.getElementById('lbltotalAdvance').innerHTML.split(",").join(""));
        var result = adv - ex;
         //Id for exPerryListEntertainment View
        if (adv != 0) {
            document.getElementById('lbltotalAll').innerHTML = result.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
        else {
            document.getElementById('lbltotalAll').innerHTML = ex.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
    }


    function getLite() {
        var totalAll = 0.00;
        var rowCount = parseInt($('#tbl_CashDetail tr.tagCountRowTravel').length);

        for (i = 0; i < rowCount; i++) {
            var x = document.getElementsByName("activityOfEstimateList[" + i + "].compensate");
            var rowtotal = parseFloat($(x).val());
            if (isNaN(rowtotal)) rowtotal = 0;
            totalAll = totalAll + rowtotal;
        }
        document.getElementById('lblLite').innerHTML = totalAll.toFixed(3).replace(/\d(?=(\d{3})+\.)/g, '$&,');
    }


    function convertBaht2Text(baht) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("textThaiBaht", "eAct")',
            data: {
                txtBaht: baht,
            }
        }).done(function (result) {
            document.getElementById('lbltxtTotal').innerHTML = result;
        });
    }

     function addRowEntertainment() {
        var RowCount = $('#tbl_Entertainment tbody tr').length - 4;
        var newRow = $("#tbl_Entertainment tbody tr").first().clone().find("input").val("").end();
        $("#tbl_Entertainment > tbody:first").append(newRow);
        newRow.find("input").each(function () {
            $(this).attr("id", $(this).attr("name").replace("[0]", "_" + RowCount + "_"));
            $(this).attr("name", $(this).attr("name").replace("[0]", "[" + RowCount + "]"));

            var elms = document.getElementsByClassName('hindenTypeId2')
            for (var i = 0; i < elms.length; i++) {
                    elms[i].setAttribute("value", "2");
            }
        }
        );

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy'
        });
    }


    function getTotal() {
        var totalAll = 0.00;
        var rowCount = parseInt($('#tbl_Entertainment tr.tagCountRowExpenses').length);

        for (i = 0; i < rowCount; i++) {
            var x = document.getElementsByName("activityOfEstimateList2[" + i + "].total");
            var rowtotal = parseFloat($(x).val());
            if (isNaN(rowtotal)) rowtotal = 0;
           var totalAll = totalAll + rowtotal;
        }
        document.getElementById('lbltotalExMaket').innerHTML = totalAll.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        totalExpenExMaket();
        totalAllExpenses();
    }

</script>
