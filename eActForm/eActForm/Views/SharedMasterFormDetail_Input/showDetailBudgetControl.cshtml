@using eActForm.BusinessLayer;
@model eActForm.Models.Activity_TBMMKT_Model

@if (Model.budgetTotalList.Count > 0)
{
    <div class="col-md-5 col-sm-5">
    </div>
    <div class="col-md-7 col-sm-7 col-xs-12 widget_tally_box">
        <div class="x_panel">
            <div class="col-xs-12 bg-white progress_summary">
                <div id="divProgress" class="row">
                    @{ int row = 0; }
                    @foreach (var item in Model.budgetTotalList)
                    {

                        string result = String.Format("{0:n2}", item.amountBalancePercen);
                        int intBalance = Convert.ToInt32(item.amountBalancePercen);
                        <div class="pro gress_title">

                            @if (row == 0)
                            {
                                if (!string.IsNullOrEmpty(item.brandId))
                                {
                                    <span>
                                        งบประมาณทั้งปี  @item.totalBudget.Value.ToString("#,##0.00") ใช้ไปสะสม @Model.budgetTotalModel.useAmountTotal.Value.ToString("#,##0.00") return @Model.budgetTotalModel.returnAmount.Value.ToString("#,##0.00") คงเหลือ @Model.budgetTotalModel.amountBalanceTotal.Value.ToString("#,##0.00")

                                    </span>
                                }
                                else
                                {
                                    <span>
                                        งบประมาณทั้งปี  @item.channelName ทั้งปี  @Model.budgetTotalModel.totalBudgetChannel.Value.ToString("#,##0.00") ใช้ไปสะสม  @Model.budgetTotalModel.useAmountTotal.Value.ToString("#,##0.00") return @Model.budgetTotalModel.returnAmount.Value.ToString("#,##0.00") คงเหลือ @Model.budgetTotalModel.amountBalanceTotal.Value.ToString("#,##0.00")
                                    </span>
                                }

                                @Html.HiddenFor(x => item.totalBudget, new { @id = "tB_Act_ActivityForm_DetailOther.amountLimit", Name = "tB_Act_ActivityForm_DetailOther.amountLimit", @class = "form-control textboxcss text-right txtTotalBudget" })
                                @Html.HiddenFor(x => Model.budgetTotalModel.useAmountTotal, new { @id = "tB_Act_ActivityForm_DetailOther.amountCumulative", Name = "tB_Act_ActivityForm_DetailOther.amountCumulative", @class = "form-control textboxcss text-right txtUseAmountTotal" })
                                @Html.HiddenFor(x => Model.budgetTotalModel.returnAmount, new { @id = "tB_Act_ActivityForm_DetailOther.amountReceived", Name = "tB_Act_ActivityForm_DetailOther.amountReceived", @class = "form-control textboxcss text-right txtReturnAmount" })
                                @Html.HiddenFor(x => Model.budgetTotalModel.amountBalanceTotal, new { @id = "tB_Act_ActivityForm_DetailOther.amountBalance", Name = "tB_Act_ActivityForm_DetailOther.amountBalance", @class = "form-control textboxcss text-right txtAmountBalanceTotal" })
                            }
                            <br />
                            @if (!string.IsNullOrEmpty(item.brandId))
                            {
                                <span>งบ @item.activityType ทั้งปี  @item.amount.Value.ToString("#,##0.00")  ใช้ไปสะสม  @item.useAmount.Value.ToString("#,##0.00")  คงเหลือ  @item.amountBalance.Value.ToString("#,##0.00")</span>
                            }
                            else
                            {
                                <span>งบ @item.brandName ทั้งปี  @item.amount.Value.ToString("#,##0.00")  ใช้ไปสะสม  @item.useAmount.Value.ToString("#,##0.00") return @item.returnAmountBrand.Value.ToString("#,##0.00") คงเหลือ  @item.amountBalance.Value.ToString("#,##0.00")</span>

                            }

                            @Html.HiddenFor(x => item.amount, new { @id = "amountBudgetList[" + row + "].budgetTotal", Name = "amountBudgetList[" + row + "].budgetTotal", @class = "form-control textboxcss text-right txtBudgetTotal__" + row })
                            @Html.HiddenFor(x => item.useAmount, new { @id = "amountBudgetList[" + row + "].useAmount", Name = "amountBudgetList[" + row + "].useAmount", @class = "form-control textboxcss text-right txtUseAmount__" + row })
                            @Html.HiddenFor(x => item.returnAmountBrand, new { @id = "amountBudgetList[" + row + "].returnAmount", Name = "amountBudgetList[" + row + "].returnAmount", @class = "form-control textboxcss text-right txtReturnAmountBrand__" + row })
                            @Html.HiddenFor(x => item.amountBalance, new { @id = "amountBudgetList[" + row + "].amountBalance", Name = "amountBudgetList[" + row + "].amountBalance", @class = "form-control textboxcss text-right txtAmountBalance__" + row })
                            @*<span class="left">สะสม</span>
                                <span class="right">คงเหลือ</span>*@
                            <div class="clearfix"></div>
                        </div>

                        <div class="col-xs-4">
                            <span>@item.EO</span>
                        </div>
                        <div class="col-xs-6">
                            <div class="progress progress_sm">
                                <div class="progress-bar bg-green" role="progressbar" data-transitiongoal="@intBalance"></div>
                            </div>
                        </div>
                        <div class="col-xs-2 more_info">
                            <span>@result%</span>
                        </div>

                        row++;
                    }


                </div>
            </div>
        </div>
    </div>
}

<script src="~/Content/vendors/bootstrap-progressbar/bootstrap-progressbar.min.js"></script>
<script src="~/Content/vendors/build/js/custom.js"></script>